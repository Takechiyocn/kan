<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="customerService" class="com.kan.aop.proxy.business.entities.CustomerService">
        <property name="name" value="kan"/>
        <property name="url" value="http://g.com"/>
    </bean>

    <!-- 代理类：执行前 -->
    <bean id="hijackBeforeMethodBean" class="com.kan.aop.proxy.business.interfaces.impl.HijackBeforeMethodImpl"></bean>
    <bean id="customerServiceBeforeProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"></property>
        <property name="interceptorNames">
            <list>
                <value>hijackBeforeMethodBean</value>
            </list>
        </property>
    </bean>

    <!-- 代理类：执行后(正常) -->
    <bean id="hijackAfterMethodBean" class="com.kan.aop.proxy.business.interfaces.impl.HijackAfterMethodImpl"></bean>
    <bean id="customerServiceAfterProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"></property>
        <property name="interceptorNames">
            <list>
                <value>hijackAfterMethodBean</value>
            </list>
        </property>
    </bean>

    <!-- 代理类：执行后(异常) -->
    <bean id="hijackThrowExceptionBean" class="com.kan.aop.proxy.business.interfaces.impl.HijackThrowExceptionImpl"></bean>
    <bean id="customerServiceThrowProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="customerService"></property>
        <property name="interceptorNames">
            <list>
                <value>hijackThrowExceptionBean</value>
            </list>
        </property>
    </bean>

    <!-- 代理类：环绕通知 -->
    <bean id="hijackAroundMethodBean" class="com.kan.aop.proxy.business.interfaces.impl.HijackAroundMethodImpl"></bean>
    <bean id="customerServiceAroundProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <!--
            JDK动态代理，目标对象：customerService
            代理类：ProxyFactoryBean(hijackAroundMethodBean实现该代理类)
        -->
        <property name="target" ref="customerService"></property>
        <property name="interceptorNames">
            <list>
                <value>hijackAroundMethodBean</value>
            </list>
        </property>
    </bean>
</beans>